esphome:
  name: keuken_screen
  platform: ESP8266
  board: esp01_1m

# Sonoff Dual 2CH. 
# First flash: short BTN0 with GND, used 3.3V FTDI

wifi:
  ssid: !secret esphome_wifi_ssid
  password: !secret esphome_wifi_password

api:

logger:

ota:

sensor:
  - platform: wifi_signal
    name: "WiFi Signal keuken screen"
    update_interval: 60s

binary_sensor:
- platform: gpio
  pin:
    number: GPIO10
    inverted: true
  id: button
  on_press:
    then:
      # logic for cycling through movements: open->stop->close->stop->...
      - lambda: |
          if (id(my_cover).current_operation == COVER_OPERATION_IDLE) {
            // Cover is idle, if at one end change direction
            if (id(my_cover).position < 0.1) {
              id(my_cover).open();
            } else if (id(my_cover).position > 0.9) {
              id(my_cover).close();
            } else {
              // check last direction and either open or close cover.
              if (id(var_last_closing)) {
                id(my_cover).open();
              } else {
                id(my_cover).close();
              }
            }
          } else {
            // Cover is opening/closing, remember the direction.
            id(var_last_closing) = (id(my_cover).current_operation == COVER_OPERATION_CLOSING);
            
            // Stop it.
            id(my_cover).stop();
          }

switch:
- platform: gpio
  pin: GPIO12
  interlock: &interlock [open_cover, close_cover]
  id: open_cover
- platform: gpio
  pin: GPIO5
  interlock: *interlock
  id: close_cover

cover:
- platform: time_based
  name: "Screen"
  id: my_cover
  open_action:
    - switch.turn_on: open_cover
  open_duration: 45s
  close_action:
    - switch.turn_on: close_cover
  close_duration: 45s
  stop_action:
    - switch.turn_off: open_cover
    - switch.turn_off: close_cover
    
globals:
  - id: var_last_closing
    type: bool
    restore_value: no
    initial_value: 'false'